import type { Express, Request, Response } from "express";
import { createFirebaseUser, generatePasswordResetLink } from "./firebase";
import { createUser, getUserByEmail, createSubscription } from "./storage";
import Stripe from "stripe";

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, { apiVersion: "2022-11-15" });

export async function registerRoutes(app: Express) {
  app.post("/api/webhooks/stripe", express.raw({ type: "application/json" }), async (req: Request, res: Response) => {
    const sig = req.headers["stripe-signature"] as string;
    const endpointSecret = process.env.STRIPE_WEBHOOK_SECRET;

    try {
      const event = stripe.webhooks.constructEvent(req.body, sig, endpointSecret!);
      console.log("✅ Webhook Recebido:", event.type);

      if (event.type === "checkout.session.completed") {
        const session = event.data.object as any;
        const userEmail = session.customer_email;
        console.log("✅ Pagamento confirmado:", session);

        if (userEmail) {
          console.log("✅ Verificando usuário no PostgreSQL:", userEmail);
          let user = await getUserByEmail(userEmail);

          if (!user) {
            console.log("✅ Criando usuário no Firebase e PostgreSQL:", userEmail);
            const tempPassword = Math.random().toString(36).slice(-8) + 'Aa1!';
            const firebaseUser = await createFirebaseUser(userEmail, tempPassword);
            const firebaseUid = firebaseUser.uid;

            user = await createUser(userEmail, userEmail.split('@')[0], firebaseUid, session.mode === 'subscription' ? 'anual' : 'vitalicio');
            console.log("✅ Usuário criado:", user);
          } else {
            console.log("✅ Usuário já existente:", user.email);
          }

          // Criar assinatura no PostgreSQL
          if (session.mode === 'subscription') {
            await createSubscription(user.id, 'anual');
          } else {
            await createSubscription(user.id, 'vitalicio');
          }

          console.log("✅ Assinatura criada/atualizada no PostgreSQL.");
        }
      }

      res.status(200).json({ received: true });
    } catch (error: any) {
      console.error("❌ Erro no webhook:", error);
      res.status(400).send(`Webhook Error: ${error.message}`);
    }
  });
}
