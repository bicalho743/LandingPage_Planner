// Backend - Sistema de Pagamento e Autenticação
// Stack: Node.js + Express + Stripe + Firebase + PostgreSQL

const express = require('express');
const cors = require('cors');
const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);
const admin = require('firebase-admin');
const { Pool } = require('pg');

const app = express();
app.use(cors());
app.use(express.json());

// Configurar o PostgreSQL
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false }
});

// Configurar o Firebase
admin.initializeApp({
  credential: admin.credential.applicationDefault()
});

// Rota para iniciar o checkout com Stripe
app.post('/api/checkout', async (req, res) => {
  const { plan } = req.body;
  let priceId = '';

  if (plan === 'mensal') priceId = process.env.STRIPE_PRICE_MONTHLY;
  if (plan === 'anual') priceId = process.env.STRIPE_PRICE_ANNUAL;
  if (plan === 'vitalicio') priceId = process.env.STRIPE_PRICE_LIFETIME;

  try {
    const session = await stripe.checkout.sessions.create({
      payment_method_types: ['card'],
      mode: 'subscription',
      line_items: [{ price: priceId, quantity: 1 }],
      subscription_data: { trial_period_days: 7 },
      success_url: `${process.env.FRONTEND_URL}/sucesso`,
      cancel_url: `${process.env.FRONTEND_URL}/cancelado`
    });

    res.json({ url: session.url });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Erro ao iniciar o checkout' });
  }
});

// Rota para webhook do Stripe
app.post('/api/stripe-webhook', express.raw({type: 'application/json'}), (req, res) => {
  const event = req.body;

  if (event.type === 'checkout.session.completed') {
    const session = event.data.object;
    console.log('Pagamento confirmado:', session);
    // Aqui podemos registrar o usuário no Firebase e salvar no PostgreSQL
  }

  res.status(200).end();
});

const PORT = process.env.PORT || 4000;
app.listen(PORT, () => console.log(`Servidor rodando na porta ${PORT}`));